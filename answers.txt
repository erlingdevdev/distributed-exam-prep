chapter3: what is virtualization?: lets apllications, or environments (os) to run concurrently with other applicatons. The use of this makes the application or service independent of the hardware and os, and gets a portability.
chapter3: Explain Processor, Thread and Process.: Processor executes a set of instructions , Thread is a minimal software processor where in its context can execute a series of instructions. Process is one or more threads that may be executed. Executing athread, means executing a series of instructions in the context of that thread
chapter3: explain context switching (w.rt Processor, Thread and Process).: Processor switch, some collection of values stored in the registers of a processor (sp, pc etc..). Thread context, values stored in registers and memory (processor context and program state), threads share address space, and switches is done entirely indpeendent of os. Process context is collection of vales stored in register  and memory. used for execution of a thread (thread context, MMU register values), quite expensive because we do syscalls and traps the kernel etc. is it cheaper to fork and join threads than for processes.
chapter3:  What are some reasons for using threads?: Avoid needless blocking, exploit parallelism, and avoid process switching.
chapter3: How can a server be constructed? : Multithreading, single-threaded, finite-state machine.
chapter3: Give tree different levels of virtualization.: fig 3.7, an interface between hardware and software, ISA. Interface of syscalls, wsl uses windows syscalls to virtualize linuz (?). virtualization of library calls (api)
chapter3: Describe process, native and hosted virtual machines (monitor).: Process is a single process virtualiation (emulator interpreter). native vmm, is between os calls and hardware, an underlying machine that abstracts the hardware for the oses to run. Hosted vmm is a native vm which allows for regulation of resources (storage, network), in order to do so it needs to implement device drivers. Instead of doing this anew, the hosted vm runs on top of a host os. 
chapter3: What are privileged and nonpriviliged instrctions. Name the two special instructions. Priviliged causes trap if user mode, nonpriviliged are the rest of it. Control-sensitive: configuration of machine, interrupt table. behavior-sensitive, effect is partially determined by context, (POPF sets ie flag, buto nly in system mode).
chapter3: "for any conventional computer, a vmm may be constructd if the set of sensitive instr. for that computer is a subset of the set of privileged instr.". What is the problem with this and what are some solution?: There may be sensitive instr. that are executed in user mode without trapping os (Intel x86 has17 sensitive instr. which arent privileged). Solutions; Emulate all isntructions, Wrap nonpriviliged sensitive instr. to divert control to vmm, Paravirtualization, modify guest OS with preventing nonpriviliged sensitive instr. or making them nonsensitive.
